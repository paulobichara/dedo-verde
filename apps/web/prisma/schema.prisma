generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  name            String?
  email           String    @unique
  emailVerifiedAt DateTime? @map("email_verified_at")
  image           String?
  plants          Plant[]
  accounts        Account[]
  sessions        Session[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Account {
  userId            Int     @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refreshToken      String? @map("refresh_token")
  accessToken       String? @map("access_token")
  expiresAt         Int?    @map("expires_at")
  tokenType         String? @map("token_type")
  scope             String?
  idToken           String? @map("id_token")
  sessionState      String? @map("session_state")
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@id([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique @map("session_token")
  expiresAt    DateTime @map("expires_at")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int      @map("user_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Plant {
  id                 Int      @id @default(autoincrement())
  nickname           String
  description        String?
  lastWaterAt        DateTime @map("last_water_date")
  waterFrequencyDays Int      @map("water_frequency_days")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  User   User? @relation(fields: [userId], references: [id])
  userId Int?  @map("user_id")
}
